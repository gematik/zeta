@startuml "mobile-client-registration"

!include ../layout.puml

Actor User
box "Mobile Device" #GhostWhite
    participant AndroidTEE as "Android TEE"
    participant UserAgent as "User Agent"
    participant MUA as "Mail\nUser Agent"
    box "mobile App" #AliceBlue
        participant FClient as "Fach-Client" #DarkSeaGreen
        participant ZClient as "ZETA Client" #SandyBrown
    end box
end box

box "Anbieter TI 2.0 Dienst" #TECHNOLOGY
    box "ZETA Guard" #SandyBrown
        participant AuthS as "PDP\nAuthS and\nPolicy Engine"
        participant PEP as "PEP\nHTTP Proxy"
    end box
    box "TI 2.0\nDienst" #DarkSeaGreen
        participant RS as "Resource\nServer"
    end box
end box

participant "Attestation\nService" as AttService

== ZClient Registration (with ZClient Attestation and Email) ==

User -> FClient++: User uses Fach-Client
alt Android Attestation
    ZClient -> AndroidTEE++: Generate Key Pair\nfor Attestation
    note right: Using Android TEE or iOS Secure Enclave
    AndroidTEE --> ZClient--: Public Key
    ZClient -> AttService++: Request Attestation Challenge
    AttService --> ZClient--: Attestation Challenge
    ZClient -> AndroidTEE++: Sign Challenge with\nAttestation Key
    note right: Using Android Play Integrity or\niOS DeviceCheck/App Attest API
    AndroidTEE --> ZClient--: Attestation Statement
else iOS Attestation
    ZClient -> ZClient:
    note right: iOS Attestation with App Attest API or\nDeviceCheck API
end
ZClient -> AuthS++: ZClient Registration Request
note right: ZClient_instance.yaml\nIncludes attestation statement, public key,\nUser Email and software statement
AuthS -> AttService++: Verify ZClient Attestation
note right: AS A forwards attestation data\nto Attestation Service
AttService -> AttService: Validate Attestation\nStatement
AttService --> AuthS--: Attestation Verification Result
AuthS -> AuthS: Verify Email Confirmation JWT\nif exists

alt Email Confirmation Required because E-Mail Confirmation JWT not\nprovided or Email Confirmation JWT expired
    AuthS -> AuthS: Generate Confirmation\nLink and send Email
    MUA -> MUA+: Receive Email
    User -> MUA: Click Confirmation\nLink in Email
    MUA -> UserAgent++: Open\nConfirmation\nLink
    deactivate MUA
    UserAgent -> AuthS--: Email Confirmation\nRequest
    AuthS -> AuthS: Verify Email\nConfirmation\nRequest
    AuthS -> AuthS: Generate Email\nConfirmation JWT
    note right: JWT Claims:\n - iss: AS_A_ID\n - sub: ZClient_id\n - aud: (all AS)\n - exp: (Policy Engine decision)\n - iat: (now)\n - Email_verified: true
    AuthS --> ZClient: ZClient Registration Response\n(ZClient_id, Email Confirmation JWT)
else Valid Email Confirmation was provided
    AuthS --> ZClient--: ZClient Registration Response\n(ZClient_id)
end

@enduml